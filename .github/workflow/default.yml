name: Default
on:
  workflow_dispatch:
  push:
  pull_request:
jobs:
  # --------------------------------------------
  build:
    name: Artifact build
    strategy:
      matrix:
        operatingSystem: [ubuntu-22.04]
        nodeVersion: [16]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    # 
    steps:
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.nodeVersion }}
    - uses: actions/checkout@v3
    - name: Build dependencies
      run: |
        cd node
        npm install
    - name: Build Format
      run: |
        cd node
        npm run format
    - name: Build Validate
      run: |
        cd node
        npm run validate
    - name: Build Compile
      run: |
        cd node
        npm run build
    - name: Build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-build
        if-no-files-found: error 
        path: |
          node/dist/
          node/package-lock.json
          README.md
          action.yml
    - name: Build test artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ github.event.repository.name }}-build-tests
        if-no-files-found: error 
        path: |
          tests/
  # --------------------------------------------
  test:
    name: Artifact Test
    strategy:
      matrix:
        operatingSystem: [ubuntu-22.04,ubuntu-20.04,macos-12,macos-11,windows-2022,windows-2019]
        nodeVersion: [12,16,18]
      fail-fast: false
    runs-on: ${{ matrix.operatingSystem }}
    needs: [build]
    #
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodeVersion }}
      - uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-build
      - uses: actions/download-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-build-tests
          path: |
            tests/
      - name: Validate setup
        if: ${{ runner.os != 'Windows' }}
        run: |
          node --version
          ls -lR
      - name: Validate setup
        if: ${{ runner.os == 'Windows' }}
        shell: powershell
        run: |
          & node --version
          Set-Location -Path ./
          Get-ChildItem -Recurse
      - name: Validate build
        uses: ./
        with:
          apiToken: ${{ secrets.GITHUB_TOKEN }}
          versionTag: "0.1.0+build-${{ matrix.operatingSystem }}-node${{ matrix.nodeVersion }}-${{ github.run_number }}${{ github.run_attempt }}"